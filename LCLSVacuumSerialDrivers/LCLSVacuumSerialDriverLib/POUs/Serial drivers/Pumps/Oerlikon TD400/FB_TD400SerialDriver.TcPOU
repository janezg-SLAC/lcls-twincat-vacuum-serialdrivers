<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_TD400SerialDriver" Id="{6aa8a7e5-fb0f-4104-9ec2-4e233db37ea0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TD400SerialDriver
VAR_INPUT
    /// rising edge execute
    i_xExecute: BOOL;
    /// Maximum wait time for reply
    i_tTimeOut: TIME := TIME#1s0ms;
    i_wControlWord: WORD;
END_VAR
VAR_OUTPUT
    q_xDone: BOOL;
    q_xError: BOOL;
    q_xTimeout: BOOL;
    q_sResult: STRING(255);
    q_stStatus: ST_TD400Status;
    /// Last Byte Sequence Sent to Serial Device - for debugging
    q_abLastSentArray: ARRAY[0..23] OF BYTE;
    /// Last Byte Sequence Received from Serial Device - for debugging
    q_abLastReceivedArray: ARRAY[0..23] OF BYTE;
END_VAR
VAR_IN_OUT
    iq_stSerialRXBuffer: ComBuffer;
    iq_stSerialTXBuffer: ComBuffer;
    iq_stControl: ST_TD400Control;
END_VAR
VAR
    rtExecute: R_TRIG;
    rtTransDone: R_TRIG;
    iStep: INT;
    fbTD400Transaction: FB_TD400Transaction;
    fbFormatString: FB_FormatString;
    iCatch: INT;
    sTransactionErrMesg : STRING := 'In step %d fbTD20Transaction failed with message: %s';
    sDriverErrMesg		: STRING := 'In step %d FB_TD20SerialDriver failed with unexpected PKE reply: %X';
    bSetFreq : BOOL := FALSE; //flag to write to controller to set new frequency
    nOldSetSetpointFreq_P24 : WORD; //local value for setpoint frequency parameter to compare with new value
    bControlDisabled : BOOL := TRUE; //flag to enable setting frequency
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* This function block performs serial transactions with a Oerlikon TD400 Pump controller *)
//Wait until all needed parameters received to enable control to set frequency
IF q_stStatus.wMinSetpointFreq_P19 <> 0 AND q_stStatus.wMaxSetpointFreq_P18 <> 0 AND q_stStatus.wSetpointFreq_P24 <> 0 THEN
    //On first pass update Set frequency parameter with value from controller
    IF bControlDisabled THEN
        iq_stControl.wSetSetpointFreq_P24 := q_stStatus.wSetpointFreq_P24;
        nOldSetSetpointFreq_P24 := q_stStatus.wSetpointFreq_P24;
        bControlDisabled := FALSE;
        bSetFreq := FALSE;
    ELSE
        IF nOldSetSetpointFreq_P24 <> iq_stControl.wSetSetpointFreq_P24 THEN
            nOldSetSetpointFreq_P24 := iq_stControl.wSetSetpointFreq_P24;
            bSetFreq := TRUE;
        END_IF
    END_IF
ELSE
    iq_stControl.wSetSetpointFreq_P24 := q_stStatus.wSetpointFreq_P24;
    bControlDisabled := TRUE;
    bSetFreq := FALSE;
END_IF

(* rising edge trigger *)
rtExecute(CLK:= i_xExecute);
IF rtExecute.Q  THEN
    q_xDone	:= FALSE;
    q_xError := FALSE;
    q_xTimeout := FALSE;
    q_sResult:= '';
    iStep := 10;
END_IF

CASE iStep OF
    0: (* idle *)
        ;

    10: (* assure rising edge *)
        fbTD400Transaction.i_xExecute := FALSE;
        iStep := iStep + 10;

    20:(* get P20 *)
        fbTD400Transaction.i_wPKE := 16#1000 OR 20;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;

        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#1000 OR 20) THEN
                q_stStatus.wCriticalFreq_P20 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                iStep := iStep + 10;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    30:(* set P24 *)
        IF bSetFreq THEN
            fbTD400Transaction.i_wPKE := 16#2000 OR 24;
            fbTD400Transaction.i_bIND := 0;
            fbTD400Transaction.i_dwPWE := WORD_TO_DWORD(iq_stControl.wSetSetpointFreq_P24);
            fbTD400Transaction.i_xExecute := TRUE;

            IF fbTD400Transaction.q_xError THEN
                iCatch := iCatch +1;
                a_TransactionErrorMesg();
                iStep := 9000;
                bSetFreq := FALSE;
            ELSIF fbTD400Transaction.q_xDone THEN
                fbTD400Transaction.i_xExecute := FALSE;
                bSetFreq := FALSE;
                IF fbTD400Transaction.q_wPKE = (16#1000 OR 24) THEN
                    q_stStatus.wSetpointFreq_P24 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                    iStep := iStep + 10;
                ELSE
                    a_DriverErrorMesg();
                    iStep := 9100;
                END_IF
            END_IF
        ELSE
            iStep := iStep + 10;
        END_IF

    40:(* get P24 *)
        fbTD400Transaction.i_wPKE := 16#1000 OR 24;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;
        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#1000 OR 24) THEN
                q_stStatus.wSetpointFreq_P24 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                iStep := iStep + 10;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    50:(* get P32 *)
        fbTD400Transaction.i_wPKE := 16#1000 OR 32;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;
        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#1000 OR 32) THEN
                q_stStatus.wMaxRunUpTime_P32 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                iStep := iStep + 10;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    60:(* get P171 index 0 *)
        fbTD400Transaction.i_wPKE := 16#6000 OR 171;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;
        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#4000 OR 171) THEN
                q_stStatus.wErrorCode_P171 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                //iStep := 8000;
                iStep := iStep + 10;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    70:(* get P18 *)
        fbTD400Transaction.i_wPKE := 16#1000 OR 18;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;
        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#1000 OR 18) THEN
                q_stStatus.wMaxSetpointFreq_P18 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                iStep := iStep + 10;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    80:(* get P19 *)
        fbTD400Transaction.i_wPKE := 16#1000 OR 19;
        fbTD400Transaction.i_bIND := 0;
        fbTD400Transaction.i_dwPWE := 0;
        fbTD400Transaction.i_xExecute := TRUE;
        IF fbTD400Transaction.q_xError THEN
            iCatch := iCatch +1;
            a_TransactionErrorMesg();
            iStep := 9000;
        ELSIF fbTD400Transaction.q_xDone THEN
            fbTD400Transaction.i_xExecute := FALSE;
            IF fbTD400Transaction.q_wPKE = (16#1000 OR 19) THEN
                q_stStatus.wMinSetpointFreq_P19 := DWORD_TO_WORD(fbTD400Transaction.q_dwPWE);
                iStep := 8000;
            ELSE
                a_DriverErrorMesg();
                iStep := 9100;
            END_IF
        END_IF

    8000: (* done *)
        q_xDone := TRUE;
        IF  i_xExecute = FALSE THEN
            q_xDone:= FALSE;
            iStep := 0;
        END_IF

    9000: (* Transaction Error *)
        q_xError := TRUE;

    9100: (* Driver Error *)
        q_xError := TRUE;

END_CASE

fbTD400Transaction(
    i_wControlWord:= i_wControlWord,
    i_tTimeOut:= i_tTimeOut,
    iq_stSerialRXBuffer:= iq_stSerialRXBuffer,
    iq_stSerialTXBuffer:= iq_stSerialTXBuffer,
    q_wStatusWord=> q_stStatus.wStatusWord,
    q_wFrequency_P3=>  q_stStatus.wFrequency_P3,
    q_wVoltage_P4=> q_stStatus.wVoltage_P4,
    q_wMotorCurrent_P5=> q_stStatus.wMotorCurrent_P5,
    q_wConverterTemp_P11=> q_stStatus.wConverterTemp_P11,
    q_wPumpTemp_P127=> q_stStatus.wPumpTemp_P127);

IF fbTD400Transaction.q_xError THEN
    a_ClearStatus();
END_IF

q_abLastSentArray := fbTD400Transaction.q_abLastSentArray;
q_abLastReceivedArray := fbTD400Transaction.q_abLastReceivedArray;]]></ST>
    </Implementation>
    <Action Name="a_ClearStatus" Id="{7787c704-76f5-4fb0-a0da-ae86551c9b9e}">
      <Implementation>
        <ST><![CDATA[q_stStatus.wStatusWord := 0;
q_stStatus.wFrequency_P3 := 0;
q_stStatus.wVoltage_P4 := 0;
q_stStatus.wMotorCurrent_P5 := 0;
q_stStatus.wConverterTemp_P11 := 0;
q_stStatus.wMaxSetpointFreq_P18 := 0;
q_stStatus.wMinSetpointFreq_P19 := 0;
q_stStatus.wCriticalFreq_P20 := 0;
//q_stStatus.wMaxCurrentFactor_P21 := 0;
q_stStatus.wSetpointFreq_P24 := 0;
q_stStatus.wMaxRunUpTime_P32 := 0;
q_stStatus.wPumpTemp_P127 := 0;
q_stStatus.wErrorCode_P171 := 0;]]></ST>
      </Implementation>
    </Action>
    <Action Name="a_DriverErrorMesg" Id="{5d515955-b6a7-4b04-afb7-0c8a01f121f7}">
      <Implementation>
        <ST><![CDATA[fbFormatString( sformat:=sDriverErrMesg,
    arg1:=F_INT(iStep),
    arg2:=F_WORD(fbTD400Transaction.q_wPKE),
    sOut => q_sResult);

a_ClearStatus();]]></ST>
      </Implementation>
    </Action>
    <Action Name="a_TransactionErrorMesg" Id="{fa0b8d18-9e36-4e93-8f52-7a9ee07ab715}">
      <Implementation>
        <ST><![CDATA[fbFormatString( sformat:=sTransactionErrMesg,
    arg1:=F_INT(iStep),
    arg2:=F_STRING(fbTD400Transaction.q_sResult),
    sOut => q_sResult);

a_ClearStatus();
q_xTimeout := fbTD400Transaction.q_xTimeout;]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>